// Import required libraries
const hubspot = require('@hubspot/api-client');
const axios = require('axios');

exports.main = (event, callback) => {
  // Create a new HubSpot Client
  const hubspotClient = new hubspot.Client({
    accessToken: process.env.PrivateAppKickBox
  });

  // Get the email address of the currently enrolled contact
  const email = event.inputFields['email'];

  // Form the GET request to the Kickbox API to verify email address
  const url = `https://api.kickbox.com/v2/verify?email=${email}&apikey=${process.env.KICKBOXAPI}`;

  axios.get(url)
    .then(response => {
      // Store the data in variables
      const { data } = response;

      // Update the contact properties with the above information
      hubspotClient.crm.contacts.basicApi.update(event.object.objectId, {
        "properties":
        {
          "kickbox_accept_all": data.accept_all,
          "kickbox_disposable_address": data.disposable,
          "kickbox_free_address": data.free,
          "kickbox_role_address": data.role,
          "kickbox_reason": data.reason,
          "kickbox_result": data.result,
          "kickbox_sendex_score": data.sendex,
          "kickbox_suggestions__did_you_mean_": data.did_you_mean
        } // end properties
      }); // end crm update

      // Optional - Could pass information back as a data output to use as a data input with Copy to Property workflow action.
      callback({
        outputFields: {
          kickbox_result: data.result,
        }
      }); // end callback
    })
    .catch(error => {
      console.error(error);
      callback({
        outputFields: {
          kickbox_result: 'error',
        }
      });
    }); // end axios request
} // end exports.main
